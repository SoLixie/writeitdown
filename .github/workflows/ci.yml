name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  validate-backend:
    name: Validate Backend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
        
    - name: Install dependencies
      working-directory: ./backend
      run: npm ci
      
    - name: Check for vulnerable dependencies
      working-directory: ./backend
      run: npm audit --audit-level high
      
    - name: Run basic tests
      working-directory: ./backend
      run: npm test
      env:
        NODE_ENV: test
        JWT_SECRET: test-secret-for-ci
        
    - name: Verify server starts
      working-directory: ./backend
      run: |
        # Start server on port 3001 to avoid conflicts
        PORT=3001 node server.js &
        SERVER_PID=$!
        
        # Wait for server to start
        sleep 10
        
        # Check if server is running
        if curl -f http://localhost:3001/api/health; then
          echo "✅ Server started successfully on port 3001"
        else
          echo "❌ Server failed to start"
          # Show server logs for debugging
          kill $SERVER_PID
          exit 1
        fi
        
        # Stop the server
        kill $SERVER_PID
        
  validate-frontend:
    name: Validate Frontend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check file structure
      run: |
        echo "Checking required files..."
        [ -f "./backend/package.json" ] && echo "✅ backend/package.json exists" || exit 1
        [ -f "./backend/server.js" ] && echo "✅ backend/server.js exists" || exit 1
        [ -f "./backend/routes/auth.js" ] && echo "✅ auth.js exists" || exit 1
        [ -f "./backend/routes/entries.js" ] && echo "✅ entries.js exists" || exit 1
        [ -f "./backend/routes/users.js" ] && echo "✅ users.js exists" || exit 1
        [ -f "./backend/middleware/auth.js" ] && echo "✅ auth middleware exists" || exit 1
        [ -f "./frontend/index.html" ] && echo "✅ index.html exists" || exit 1
        [ -f "./frontend/dashboard.html" ] && echo "✅ dashboard.html exists" || exit 1
        
  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [validate-backend, validate-frontend]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        tags: writeitdown-app:ci-test
        load: true
        
    - name: Test Docker image
      run: |
        echo "Testing Docker image..."
        docker run --rm writeitdown-app:ci-test node -e "console.log('✅ Docker image works')"